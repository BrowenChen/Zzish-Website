extends ../promotion_layout

block content

	p &nbsp;

	div.row.main_cleanformatting_invert

		p(style="color: #000000;") <a href="/modules" style="color: #000000;"> Modules </a> > Content Module



		h1(align="center" style="margin-bottom: 20px; margin-top: -50px; font-size:75px;") Content Module

		div.small-8.large-centered.columns
			div.large-2.columns#module2
				a(href="/modules/appanalytics")
					img(src="/img/icons/circle-appanalytics.png")

			div.large-2.columns#module1
				a(href="/modules/adaptivealgorithms")
					img(src="/img/icons/circle-adaptivealgorithms.png")

			div.large-2.columns#module5
				a(href="/modules/gamification")
					img(src="/img/icons/circle-gamification.png")

			div.large-2.columns(style="margin-bottom: 20px;")#module6
				a(href="/modules/learninganalytics")
					img(src="/img/icons/circle-learninganalytics.png")

			div.large-2.columns#module3
				a(href="/modules/classroom")
					img(src="/img/icons/circle-classroom.png")

			div.large-2.columns#module4
				a(href="/modules/contentmodule")
					img(src="/img/icons/circle-contentmodule.png")



		p &nbsp;

		div.small-10.large-centered.columns

			p The content module provides a state-of-the-art content management system for managing data in your app.   We provide a web interface for you to create and update data for your app with full versioning and the software framework to updating content on devices when you update your content without requiring you to deploy a new version of your app and have learners update it.

			hr

			h2 Key Features

			div.main_formatting.small-10.large-centered.columns
				ol
					li Web interface for creating and updating content for use in your app
					li Framework for updating content on devices


			hr

			h1(align="center") Vision

			p Simple mobile apps take one of two approaches to deploying learning content in an app.  Either all content is stored on the server and fetched from the server in real-time as the learner uses the app, or the content is “baked-in” to the app when it is deployed.   The problem with the first is that the app only works when the device is connected to the Internet meaning that learners can’t use your app on trains or in classrooms without wifi.   The problem with the second is that if you want to change the content in your app, then you have to redeploy the whole app to the app store and your learners need to update the app on their device.  This can be particularly painful for teachers in classrooms with many devices.

			p The content module solves this problem by making it possible to update content on the device easily.   When content is updated on the server a notification is sent to devices that the content has changed and your app can update the content either automatically in the background, or notify the learner that new content is available and have the learner update the content when they wish.  You can also specify whether the learner must update the content before continuing or can continue using the previous version of the content.

			p The content module also lets you specify content sets of content that can be installed on demand from the user.  For example, rather than deploying all content for all lessons with the app, you can let the user choose which lessons they wish to install.   You can also use this feature to create your own content store where content is installed after learners have paid for it.

			p Our web interface is designed specifically for developers of learning apps and our server understands the concepts of lesson content, practice content and test/revision content.   Practice content is content that is related directly to the lesson whereas test/revision content is additional content used to test the concepts taught in the lesson.  Our server also enables you to create templated questions and answers from data.




		